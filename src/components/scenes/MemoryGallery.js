import React, { useState, useEffect } from "react";
import "./MemoryGallery.css";

function MemoryGallery({ onComplete }) {
    const [currentIndex, setCurrentIndex] = useState(0);
    const [showButton, setShowButton] = useState(false);

    const photos = [
        {
            url: `${process.env.PUBLIC_URL}/photos/15.jpg`,
            caption: "T·∫•m anh th√≠ch nh·∫•t h√≠ h√≠ üòä",
        },
        {
            url: `${process.env.PUBLIC_URL}/photos/20.jpg`,
            caption: "B√¥ng hoa xinh ƒë·∫πp nh·∫•t cu·ªôc ƒë·ªùi anh üå∏",
        },
        {
            url: `${process.env.PUBLIC_URL}/photos/13.jpg`,
            caption: "Cute qu√° ƒëi m·∫•t! üòç",
        },
        {
            url: `${process.env.PUBLIC_URL}/photos/1.jpg`,
            caption: "C√πng nh√¨n qua nh·ªØng th√†nh t·ª±u c·ªßa c√¥ng ch√∫a n√®! üëë",
        },
        {
            url: `${process.env.PUBLIC_URL}/photos/3.jpg`,
            caption: "ƒêi h√† n·ªôi n√® üöÜ",
        },
        {
            url: `${process.env.PUBLIC_URL}/photos/9.jpg`,
            caption: "Chi·∫øc v√°y anh th√≠ch nh·∫•t üíÉ",
        },
        {
            url: `${process.env.PUBLIC_URL}/photos/8.jpg`,
            caption: "ƒêo·∫°t gi·∫£i nh·∫•t n√® - r·ª±c r·ª° nh·∫•t üèÜ",
        },
        {
            url: `${process.env.PUBLIC_URL}/photos/19.jpg`,
            caption: "ƒêo·∫°t gi·∫£i ti·∫øp n√® - xinh ƒë·∫πp nh·∫•t ü•á",
        },
        {
            url: `${process.env.PUBLIC_URL}/photos/18.jpg`,
            caption: "L√†m MC xinh ƒë·∫πp n√® üé§",
        },
        {
            url: `${process.env.PUBLIC_URL}/photos/16.jpg`,
            caption: "T·ªët nghi·ªáp TESOL - xu·∫•t s·∫Øc nh·∫•t üéì",
        },
        {
            url: `${process.env.PUBLIC_URL}/photos/17.jpg`,
            caption: "Xinh ƒë·∫πp r·∫°ng ng·ªùi ng√†y t·ªët nghi·ªáp üëó",
        },
        {
            url: `${process.env.PUBLIC_URL}/photos/7.jpg`,
            caption: "D·ªÖ th∆∞∆°ng qu√° ƒëi m·∫•t! ü•∞",
        },
        {
            url: `${process.env.PUBLIC_URL}/photos/12.jpg`,
            caption: "B√™n em m·ªçi l√∫c - n√™n ph·∫£i c∆∞·ªùi th·∫≠t t∆∞∆°i nh∆∞ v·∫ßy nh√©! üòÑ",
        },
        {
            url: `${process.env.PUBLIC_URL}/photos/6.jpg`,
            caption: "B√© kh·ªßng long ƒë√°ng y√™u c·ªßa anh ü¶ñ",
        },
        {
            url: `${process.env.PUBLIC_URL}/photos/2.jpg`,
            caption: "Ui da tim anh r·ª•ng r·ªùi r·ªìi üíò",
        },
        {
            url: `${process.env.PUBLIC_URL}/photos/14.jpg`,
            caption: "Y√™u em nhi·ªÅu l·∫Øm lu√¥n! ‚ù§Ô∏è",
        },
        {
            url: `${process.env.PUBLIC_URL}/photos/5.jpg`,
            caption: "M√£i b√™n anh nh√© - y√™u em!ü§ó",
        },
    ];

    useEffect(() => {
        const interval = setInterval(() => {
            setCurrentIndex((prev) => (prev + 1) % photos.length);
        }, 3500);

        setTimeout(() => {
            setShowButton(true);
        }, 8000);

        return () => clearInterval(interval);
    }, [photos.length]);

    return (
        <div className="memory-gallery">
            <h2 className="gallery-title-new">
                Nh·ªØng kho·∫£nh kh·∫Øc ƒë·∫πp c·ªßa ch√∫ng m√¨nh üíï
            </h2>

            <div className="photo-frame-container">
                <div className="photo-frame">
                    {photos.map((photo, index) => (
                        <div
                            key={index}
                            className={`photo-slide ${
                                index === currentIndex ? "active" : ""
                            }`}
                            style={{ backgroundImage: `url(${photo.url})` }}
                        >
                            <div className="photo-caption">{photo.caption}</div>
                        </div>
                    ))}
                </div>

                <div className="frame-glow"></div>
            </div>

            <div className="photo-indicators">
                {photos.map((_, index) => (
                    <span
                        key={index}
                        className={`indicator ${
                            index === currentIndex ? "active" : ""
                        }`}
                        onClick={() => setCurrentIndex(index)}
                    ></span>
                ))}
            </div>

            {showButton && (
                <button className="next-btn" onClick={onComplete}>
                    Xem l·ªùi nh·∫Øn c·ªßa anh üíå
                </button>
            )}
        </div>
    );
}

export default MemoryGallery;
